"""
Модуль для виконання двійкового пошуку з визначенням верхньої межі у відсортованому масиві.

Цей модуль містить функцію для виконання модифікованого двійкового пошуку,
яка повертає кількість ітерацій та верхню межу для заданого цільового значення
у відсортованому масиві дробових чисел.
"""

from typing import List, Tuple, Optional

def binary_search_with_upper_bound(arr: List[float], target: float) -> Tuple[int, Optional[float]]:
    """
    Виконує двійковий пошук з визначенням верхньої межі у відсортованому масиві.

    Функція шукає 'верхню межу' - найменший елемент, який є більшим або рівним
    цільовому значенню. Якщо такого елемента немає, повертає None.

    Args:
        arr (List[float]): Відсортований за зростанням масив дробових чисел.
        target (float): Цільове значення для пошуку.

    Returns:
        Tuple[int, Optional[float]]: Кортеж, що містить:
            - int: Кількість ітерацій, виконаних під час пошуку.
            - Optional[float]: Верхня межа - найменший елемент, який є більшим або 
                               рівним цільовому значенню. None, якщо такого елемента немає.

    Примітки:
        - Якщо масив порожній або цільове значення більше за найбільший елемент,
          функція повертає (0, None).
        - Для масиву з одним елементом функція завжди повертає цей елемент
          як верхню межу, незалежно від цільового значення.
    """
    # Перевірка крайніх випадків
    if not arr or target > arr[-1]:
        return 0, None
    if len(arr) == 1:
        return 1, arr[0]

    low, high = 0, len(arr) - 1
    iterations = 0

    # Основний цикл двійкового пошуку
    while low < high:
        iterations += 1
        mid = (low + high) // 2

        if arr[mid] < target:
            low = mid + 1
        elif arr[mid] > target:
            high = mid - 1
        else:
            return iterations, arr[mid]

    return iterations, arr[low]


def run_tests():
    """
    Виконує набір тестових випадків для функції binary_search_with_upper_bound.
    """
    test_cases = [
        ([1.1, 1.3, 2.5, 3.8, 4.6], 3.5, (2, 3.8)),
        ([1.1, 1.3, 2.5, 3.8, 4.6], 5.0, (0, None)),
        ([1.1, 1.3, 2.5, 3.8, 4.6], 1.2, (2, 1.3)),
        ([1.0, 2.0, 3.0, 4.0, 5.0], 3.5, (2, 4.0)),
        ([], 1.0, (0, None)),
        ([1.0], 1.0, (1, 1.0)),
        ([1.0, 1.0, 1.0], 1.0, (1, 1.0)),
        ([0.1, 0.2, 0.3], 0.05, (1, 0.1)),
    ]

    for i, (arr, target, expected) in enumerate(test_cases, 1):
        result = binary_search_with_upper_bound(arr, target)
        print(f"Тест {i}:")
        print(f"  Масив: {arr}")
        print(f"  Цільове значення: {target}")
        print(f"  Очікуваний результат: {expected}")
        print(f"  Отриманий результат: {result}")
        print(f"  {'Пройдено' if result == expected else 'Не пройдено'}\n")

if __name__ == '__main__':
    run_tests()
